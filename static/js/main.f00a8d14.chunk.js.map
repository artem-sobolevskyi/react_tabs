{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","id","title","cn","href","onClick","selectedTabOnClick","some","find","content","App","defaultTab","useState","selectedTab","setSelectedTab","selectedTabFromTabs","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAMhC,IAAD,EAJDC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,cAaF,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GACR,IACEC,EAEED,EAFFC,GACAC,EACEF,EADFE,MAGF,OACE,oBACEJ,UAAWK,IAAG,CAAE,YAAaP,IAAkBK,IAC/C,UAAQ,MAFV,SAKE,mBACEG,KAAI,WAAMH,GACV,UAAQ,UACRI,QAAS,kBA7BJC,EA6BsBN,EA5BpCL,EAAKY,MAAK,SAAAP,GAAG,OAAIA,EAAIC,KAAOL,MAC/BC,EAAcF,EAAK,SAGjBW,EAAmBL,KAAOL,GAC5BC,EAAcS,IANE,IAACA,GA0BP,SAKGJ,KAPED,UAef,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,6BACMH,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOL,YADlC,aACM,EAA4Ca,eClD3Cd,EAAO,CAClB,CAAEM,GAAI,QAASC,MAAO,QAASO,QAAS,eACxC,CAAER,GAAI,QAASC,MAAO,QAASO,QAAS,eACxC,CAAER,GAAI,QAASC,MAAO,QAASO,QAAS,gBAG7BC,EAAgB,WAC3B,IAAMC,EAAahB,EAAK,GACxB,EAAsCiB,mBAASD,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAYA,OACE,sBAAKhB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SAXI,mBAAN,OACqBe,EAAYX,SAc/B,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAeiB,EAAYZ,GAC3BJ,cAbgB,SAACkB,GACrBD,EAAeC,UCrBnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f00a8d14.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab:Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  },\n) => {\n  const handleClick = (selectedTabOnClick: Tab) => {\n    if (!tabs.some(tab => tab.id === selectedTabId)) {\n      onTabSelected(tabs[0]);\n    }\n\n    if (selectedTabOnClick.id !== selectedTabId) {\n      onTabSelected(selectedTabOnClick);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const {\n              id,\n              title,\n            } = tab;\n\n            return (\n              <li\n                className={cn({ 'is-active': selectedTabId === id })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClick(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {`${tabs.find(tab => tab.id === selectedTabId)?.content}`}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const defaultTab = tabs[0];\n  const [selectedTab, setSelectedTab] = useState(defaultTab);\n\n  const selectedTabContent = () => {\n    return (\n      `Selected tab is ${selectedTab.title}`\n    );\n  };\n\n  const onTabSelected = (selectedTabFromTabs: Tab) => {\n    setSelectedTab(selectedTabFromTabs);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {selectedTabContent()}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}